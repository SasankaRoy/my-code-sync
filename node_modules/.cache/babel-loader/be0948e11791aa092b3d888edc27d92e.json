{"ast":null,"code":"var _jsxFileName = \"E:\\\\onlineIDEwithreact\\\\real-time-editor\\\\src\\\\components\\\\Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport codeMirror from \"codemirror\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/theme/dracula.css\";\nimport \"codemirror/addon/edit/closetag\";\nimport \"codemirror/addon/edit/closebrackets\";\nimport \"codemirror/lib/codemirror.css\";\nimport Events from \"../Events\"; // const textA = document.getElementById('RTeditor');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Editor = _ref => {\n  _s();\n\n  let {\n    socketRef,\n    roomId\n  } = _ref;\n  const editorRef = useRef(null);\n  useEffect(() => {\n    async function init() {\n      editorRef.current = codeMirror.fromTextArea(document.getElementById(\"RTeditor\"), {\n        mode: {\n          name: \"javascript\",\n          json: true\n        },\n        theme: \"dracula\",\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n        lineNumbers: true\n      });\n      editorRef.current.on(\"change\", (instance, value) => {\n        const {\n          origin\n        } = value;\n        const code = instance.getValue();\n\n        if (origin !== \"setValue\") {\n          // console.log(\" first working\");\n          socketRef.current.emit(Events.Code_Change, {\n            roomId,\n            code\n          });\n        } // console.log(code);\n\n      });\n      socketRef.current.on(Events.Code_Change, _ref2 => {\n        let {\n          code\n        } = _ref2;\n        console.log(code);\n\n        if (code !== null) {\n          editorRef.current.setValue(code);\n        }\n      });\n    }\n\n    init();\n  }, []);\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"RTeditor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Editor, \"ueqoO+5gVAT6IRBF08iN84bYr2g=\");\n\n_c = Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["E:/onlineIDEwithreact/real-time-editor/src/components/Editor.js"],"names":["React","useEffect","useRef","codeMirror","Events","Editor","socketRef","roomId","editorRef","init","current","fromTextArea","document","getElementById","mode","name","json","theme","autoCloseTags","autoCloseBrackets","lineNumbers","on","instance","value","origin","code","getValue","emit","Code_Change","console","log","setValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,uCAAP;AACA,OAAO,8BAAP;AACA,OAAO,gCAAP;AACA,OAAO,qCAAP;AACA,OAAO,+BAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;;;;AAEA,OAAO,MAAMC,MAAM,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA0B;AAC/C,QAAMC,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,IAAf,GAAsB;AACpBD,MAAAA,SAAS,CAACE,OAAV,GAAoBP,UAAU,CAACQ,YAAX,CAClBC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CADkB,EAElB;AACEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,IAAI,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAE;AAA5B,SADR;AAEEC,QAAAA,KAAK,EAAE,SAFT;AAGEC,QAAAA,aAAa,EAAE,IAHjB;AAIEC,QAAAA,iBAAiB,EAAE,IAJrB;AAKEC,QAAAA,WAAW,EAAE;AALf,OAFkB,CAApB;AAUAZ,MAAAA,SAAS,CAACE,OAAV,CAAkBW,EAAlB,CAAqB,QAArB,EAA+B,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAClD,cAAM;AAAEC,UAAAA;AAAF,YAAaD,KAAnB;AACA,cAAME,IAAI,GAAGH,QAAQ,CAACI,QAAT,EAAb;;AACA,YAAIF,MAAM,KAAK,UAAf,EAA2B;AACzB;AACAlB,UAAAA,SAAS,CAACI,OAAV,CAAkBiB,IAAlB,CAAuBvB,MAAM,CAACwB,WAA9B,EAA2C;AACzCrB,YAAAA,MADyC;AAEzCkB,YAAAA;AAFyC,WAA3C;AAID,SATiD,CAUlD;;AACD,OAXD;AAcAnB,MAAAA,SAAS,CAACI,OAAV,CAAkBW,EAAlB,CAAqBjB,MAAM,CAACwB,WAA5B,EAAyC,SAAc;AAAA,YAAb;AAAEH,UAAAA;AAAF,SAAa;AACrDI,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACA,YAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBjB,UAAAA,SAAS,CAACE,OAAV,CAAkBqB,QAAlB,CAA2BN,IAA3B;AACD;AACF,OALD;AAMD;;AACDhB,IAAAA,IAAI;AACL,GAlCQ,EAkCN,EAlCM,CAAT;AAoCAR,EAAAA,SAAS,CAAC,MAAI,CAAE,CAAP,CAAT;AAEA,sBACE;AAAA,2BACE;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CA7CM;;GAAMI,M;;KAAAA,M","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport codeMirror from \"codemirror\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/theme/dracula.css\";\r\nimport \"codemirror/addon/edit/closetag\";\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport Events from \"../Events\";\r\n// const textA = document.getElementById('RTeditor');\r\n\r\nexport const Editor = ({ socketRef, roomId }) => {\r\n  const editorRef = useRef(null);\r\n  useEffect(() => {\r\n    async function init() {\r\n      editorRef.current = codeMirror.fromTextArea(\r\n        document.getElementById(\"RTeditor\"),\r\n        {\r\n          mode: { name: \"javascript\", json: true },\r\n          theme: \"dracula\",\r\n          autoCloseTags: true,\r\n          autoCloseBrackets: true,\r\n          lineNumbers: true,\r\n        }\r\n      );\r\n      editorRef.current.on(\"change\", (instance, value) => {\r\n        const { origin } = value;\r\n        const code = instance.getValue();\r\n        if (origin !== \"setValue\") {\r\n          // console.log(\" first working\");\r\n          socketRef.current.emit(Events.Code_Change, {\r\n            roomId,\r\n            code,\r\n          });\r\n        }\r\n        // console.log(code);\r\n      });\r\n\r\n\r\n      socketRef.current.on(Events.Code_Change, ({ code }) => {\r\n        console.log(code)\r\n        if (code !== null) {\r\n          editorRef.current.setValue(code);\r\n        }\r\n      });\r\n    }\r\n    init();\r\n  }, []);\r\n\r\n  useEffect(()=>{})\r\n\r\n  return (\r\n    <>\r\n      <textarea id=\"RTeditor\"></textarea>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}